name: ci-tests

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main", "reusable-app" ]
    paths-ignore: [ "docs/**" ]


jobs:
  linter:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Run pre-commit
        uses: pre-commit/action@v2.0.3

  # With no caching at all the entire ci process takes 4m 30s to complete!
  test-sqlite:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: anvil_consortium_manager.tests.settings.test

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt

      - name: Test with SQLite backend
        run:  python ./runtests.py

      - name: Run code coverage
        run:  |
          coverage run runtests.py
          coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  # With no caching at all the entire ci process takes 4m 30s to complete!
  test-mariadb:
    runs-on: ubuntu-latest

    env:
      DJANGO_SETTINGS_MODULE: anvil_consortium_manager.tests.settings.test_mariadb
      ANVIL_API_SERVICE_ACCOUNT_FILE: foo

    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.8
        - 3.9
        - 3.10
        database:
        - mariadb:10.3
        - mariadb:10.4
        - mariadb:10.5
        - mariadb:latest

    services:
      database:
        image: ${{ matrix.database }}
        env:
          MYSQL_ROOT_PASSWORD: rootpw
        ports:
          - 3306:3306
        options: --tmpfs /var/lib/mysql

    steps:

      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip
          cache-dependency-path: |
            requirements/base.txt
            requirements/local.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements/local.txt

      - name: Test with MariaDB backend
        run:  python ./runtests.py
