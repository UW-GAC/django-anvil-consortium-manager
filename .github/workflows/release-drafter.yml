name: Release Drafter

on:
  push:
    # branches to consider in the event; optional, defaults to all
    branches:
      - main
      - test-release-drafter



permissions:
  contents: read

jobs:
  update_release_draft:
    permissions:
      # write permission is required to create a github release
      contents: write
      # write permission is required for autolabeler
      # otherwise, read permission is required at least
      pull-requests: read
    runs-on: ubuntu-latest
    steps:

      # Check out the repository so that the action can access it
      - uses: actions/checkout@v4.2.2

      - name: Set up Python
        uses: actions/setup-python@v5.4.0
        with:
          python-version: "3.10"

      # Install packaging tool.
      - name: Install hatch
        run: python -m pip install --upgrade hatch

      # Get the version of the package using hatch
      - name: Get version
        id: get-version
        run: |
            export VERSION=v`hatch version`

            echo "version=${VERSION}" >> $GITHUB_OUTPUT
            echo "Version set to ${VERSION}"

      # Check that the tag does not exist yet.
      - name: Check that version doesn't exist
        id: check-release
        run: |
            echo "Checking version ${VERSION}"

            export CHECK=$(gh release list \
            --repo ${{ github.repository }} \
            --json tagName \
            --exclude-drafts \
            --jq "map(select(.tagName == \"${VERSION}\"))|length" \
            )
            echo "Found ${CHECK} releases"

            if [ $CHECK -gt 0 ]; then
            echo "Release already exists for version ${VERSION}"
            exit 1
            fi
        env:
            VERSION: ${{ steps.get-version.outputs.version }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Check that tag doesn't exist
        id: check-tag
        run: |
            echo "Checking tag for version ${VERSION}"

            # Query the API for this tag.
            export CHECK=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository }}/tags \
            --jq "map(select(.name  == \"${VERSION}\"))|length" \
            )
            echo "Found ${CHECK} tags"

            if [ $CHECK -gt 0 ]; then
            echo "Tag already exists for version ${VERSION}"
            exit 1
            fi
        env:
            VERSION: ${{ steps.get-version.outputs.version }}
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v6
        with:
          version: ${{ steps.get-version.outputs.version }}
          tag: ${{ steps.get-version.outputs.version }}
          name: ${{ steps.get-version.outputs.version }}
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        # with:
        #   config-name: my-config.yml
        #   disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
