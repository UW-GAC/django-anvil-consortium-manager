name: ci-tox

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  pull_request:
    branches: [ "master", "main" ]
    paths-ignore: [ "docs/**" ]

  push:
    branches: [ "master", "main", "tox" ]
    paths-ignore: [ "docs/**" ]


jobs:
  test-sqlite:
    name: "Python ${{ matrix.python-version }} - sqlite"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }}"

        run: "python -m tox"

  test-mariadb:
    name: "Python ${{ matrix.python-version }} - mariadb - ${{ matrix.mariadb-version }}"
    runs-on: "ubuntu-latest"
    env:
        DBNAME: test
        DBUSER: root
        DBPASSWORD: rootpw
        DBHOST: 127.0.0.1
        DBPORT: $
        BACKEND: mariadb

    strategy:
      matrix:
        python-version: ["3.8"]
        mariadb-version: ["10.5"]

    services:
      database:
        image: mariadb:${{ matrix.mariadb-version }}
        env:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --tmpfs /var/lib/mysql

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Install dependencies"
        run: |
          python -VV
          python -m site
          python -m pip install --upgrade pip setuptools wheel
          python -m pip install --upgrade coverage[toml] virtualenv tox tox-gh-actions

      - name: "Run tox targets for ${{ matrix.python-version }} and ${{ matrix.backend }}-${{ matrix.mariadb-version }}"
        run: "python -m tox"
